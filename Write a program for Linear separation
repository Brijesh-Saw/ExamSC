from sklearn import svm 
import numpy as np 

# Making dataset 
X = np.array([[1, 2], [2, 3], [3, 1], [4, 3]]) 
Y = np.array([0, 0, 1, 1]) 
# Now lets train svm model 
model = svm.SVC(kernel='linear') 
model.fit(X, Y) 

# Lets predict for new input 
n_data = np.array([[5, 2], [2, 1]]) 
pred = model.predict(n_data) 
print(pred)

#We will plot boundary for the same


import matplotlib.pyplot as plt 
# lets plot decision boundary for this 
w = model.coef_[0] 
b = model.intercept_[0] 
x = np.linspace(1, 4) 
y = -(w[0] / w[1]) * x - b / w[1] 
plt.plot(x, y, 'k-') 
# plot data points 
plt.scatter(X[:, 0], X[:, 1], c=Y) 
plt.xlabel('Feature 1') 
plt.ylabel('Feature 2') 
plt.show()
